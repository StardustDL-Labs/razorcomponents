name: CI

on:
  push:
  pull_request:

defaults:
  run:
    shell: pwsh

env:
  dotnet-version: "5.0.x"
  node-version: "12.x"
  build_version: "0.0.1-alpha.${{ github.run_number }}"

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Setup NodeJS
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.node-version }}
    - name: Setup psake
      run: Set-PSRepository -Name PSGallery -InstallationPolicy Trusted; Install-Module -Name psake
    - name: CI
      run: Invoke-psake ci
    # - name: Upload reports
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: ci-${{ matrix.os }}
    #     path: ./reports
  deploy:
    needs: ci
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && ! startsWith(github.event.head_commit.message, 'docs:') }}
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Setup NodeJS
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.node-version }}
    - name: Setup psake
      run: Set-PSRepository -Name PSGallery -InstallationPolicy Trusted; Install-Module -Name psake
    - name: Build and Deploy packages
      run: Invoke-psake cd
    - name: Upload package artifacts
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ./packages
    - name: Upload to Azure packages
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZ_TOKEN }}
      run: Invoke-psake publish-packages
  invoke-cd:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      PKG: ${{ format('{0}', contains(github.event.head_commit.message, '/pkg')) }}
    steps:
    - name: Invoke CD workflow
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: CD
        token: ${{ secrets.PA_TOKEN }}
        inputs: '{ "pkg": "${{ env.PKG }}" }'